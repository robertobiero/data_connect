{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robertobiero\\\\Desktop\\\\react-tutorial\\\\dataa_connect\\\\data_connect\\\\src\\\\components\\\\MoviesList.js\";\nimport React from 'react';\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\nimport { useState } from 'react';\n\nclass MovieList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.dev/api/film\").then(res => res.json()).then(resul => {\n      this.setState({\n        isLoaded: true,\n        items: resul.results\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, items.map(item => /*#__PURE__*/React.createElement(Movie, {\n        movies: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      })));\n    }\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["C:/Users/robertobiero/Desktop/react-tutorial/dataa_connect/data_connect/src/components/MoviesList.js"],"names":["React","Movie","classes","useState","MovieList","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","resul","setState","results","render","message","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,KAAD,IAAW;AACP,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEM,KAAK,CAACE;AAFH,OAAd;AAIH,KART,EASQ;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACP,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAjBT;AAmBH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACP,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACY,OAAnB,CAAP;AACH,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFM,MAEA;AACH,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,KAAK,CAACW,GAAN,CAAUC,IAAI,iBAEX,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,CADL,CADJ;AAQH;AACJ;;AAhDmC;;AAkDxC,eAAenB,SAAf","sourcesContent":["import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\nimport { useState } from 'react';\n\n\nclass MovieList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://swapi.dev/api/film\")\n            .then(res => res.json())\n            .then(\n                (resul) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: resul.results\n                    });\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <ul>\n                    {items.map(item => (\n                      \n                        <Movie movies={item} />\n                    ))}\n                </ul>\n            );\n        }\n    }\n}\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}